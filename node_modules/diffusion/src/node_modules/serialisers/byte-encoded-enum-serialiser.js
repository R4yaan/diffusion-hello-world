"use strict";
/**
 * @module Serialisers
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
/**
 * Read an enum from a Buffer stream
 *
 * @param  bis       the stream from which to read the enum value
 * @param  enumType  the enum type
 * @return           the value read from the stream if it is a valid enum value
 *
 * @throws an error if the value read is not a valid enum value
 */
function read(output, enumType) {
    var e = Codec.readByte(output);
    if (enumType[e] === undefined) {
        throw new Error('Unable to decode enum value ' + e);
    }
    // reverse lookup, then forward lookup
    // for enum-like objects storing  objects with id, this returns the object instead of the id
    return enumType[enumType[e]];
}
exports.read = read;
/**
 * Write an enum to a Buffer stream
 *
 * @param  bis  the stream to which to write the enum value
 * @param  val  the numeric enum value or an object that contains the enum value
 *              as `id` property
 */
function write(input, val) {
    if (typeof val === 'number') {
        Codec.writeByte(input, val);
    }
    else {
        Codec.writeByte(input, val.id);
    }
}
exports.write = write;
