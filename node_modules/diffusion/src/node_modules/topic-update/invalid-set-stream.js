"use strict";
/**
 * @module TopicUpdate
 */
Object.defineProperty(exports, "__esModule", { value: true });
var library_1 = require("core-js/library");
/**
 * An update stream delegate that is used after the update stream has encountered
 * an invalid operation and a value was set.
 */
var InvalidSetStream = /** @class */ (function () {
    /**
     * Create a new InvalidSetStream instance
     *
     * @param err    the error that occurred
     * @param value  the last value
     */
    function InvalidSetStream(err, value) {
        this.value = value;
        this.err = err;
    }
    /**
     * @inheritdoc
     */
    InvalidSetStream.prototype.set = function () {
        return library_1.Promise.reject(this.err);
    };
    /**
     * @inheritdoc
     */
    InvalidSetStream.prototype.get = function () {
        return this.value;
    };
    /**
     * @inheritdoc
     */
    InvalidSetStream.prototype.validate = function () {
        return library_1.Promise.reject(this.err);
    };
    /**
     * @inheritdoc
     */
    InvalidSetStream.prototype.onSetComplete = function () {
        // no-op
    };
    /**
     * @inheritdoc
     */
    InvalidSetStream.prototype.onSetFailed = function () {
        // no-op
    };
    /**
     * @inheritdoc
     */
    InvalidSetStream.prototype.onValidateComplete = function () {
        // no-op
    };
    /**
     * @inheritdoc
     */
    InvalidSetStream.prototype.onValidateFailed = function () {
        // no-op
    };
    return InvalidSetStream;
}());
exports.InvalidSetStream = InvalidSetStream;
