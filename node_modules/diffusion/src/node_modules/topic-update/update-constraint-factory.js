"use strict";
/**
 * @module TopicUpdate
 */
Object.defineProperty(exports, "__esModule", { value: true });
var datatypes_1 = require("data/datatypes");
var update_constraint_1 = require("topic-update/update-constraint");
var require_non_null_1 = require("util/require-non-null");
/**
 * Implementation of {@link UpdateConstraintFactory}
 */
var UpdateConstraintFactoryImpl = /** @class */ (function () {
    function UpdateConstraintFactoryImpl() {
    }
    /**
     * @inheritdoc
     */
    UpdateConstraintFactoryImpl.prototype.locked = function (lock) {
        return new update_constraint_1.Locked(lock);
    };
    /**
     * @inheritdoc
     */
    UpdateConstraintFactoryImpl.prototype.value = function (value, dataType) {
        require_non_null_1.requireNonNull(value, 'value');
        var valueType = ((dataType !== undefined)
            ? dataType
            : datatypes_1.DataTypes.getByValue(value));
        if (valueType === undefined) {
            throw new Error('Datatype invalid or could not be inferred');
        }
        return new update_constraint_1.BinaryValue(valueType.toBytes(value));
    };
    /**
     * @inheritdoc
     */
    UpdateConstraintFactoryImpl.prototype.noValue = function () {
        return new update_constraint_1.NoValue();
    };
    /**
     * @inheritdoc
     */
    UpdateConstraintFactoryImpl.prototype.noTopic = function () {
        return new update_constraint_1.NoTopic();
    };
    /**
     * @inheritdoc
     */
    UpdateConstraintFactoryImpl.prototype.jsonValue = function () {
        return new update_constraint_1.PartialJSONImpl();
    };
    return UpdateConstraintFactoryImpl;
}());
exports.UpdateConstraintFactoryImpl = UpdateConstraintFactoryImpl;
/**
 * The UpdateConstraintFactory singleton instance
 */
var updateConstraintFactory = Object.freeze(new UpdateConstraintFactoryImpl());
exports.updateConstraintFactory = updateConstraintFactory;
