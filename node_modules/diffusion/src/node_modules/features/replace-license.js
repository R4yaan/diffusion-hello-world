"use strict";
/**
 * @module LicenceUpdate
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Services = require("services/services");
var LicenceUpdater = /** @class */ (function () {
    function LicenceUpdater(internal) {
        this.LICENCE_UPDATE = internal.getServiceLocator().obtain(Services.UPDATE_LICENSE);
    }
    /**
     * Sends a byte array containing a license to the Diffusion server for verification. Takes an ArrayBuffer.
     * @param arrayBufferedFile the license to be uploaded in buffer form
     * @returns       the success of the operation
     */
    LicenceUpdater.prototype.updateLicence = function (arrayBufferedFile) {
        var _this = this;
        var bufferedFile = Buffer.from(arrayBufferedFile);
        return new Promise(function (resolve, reject) {
            _this.LICENCE_UPDATE.send(bufferedFile, function (err, response) {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(response);
                }
            });
        });
    };
    return LicenceUpdater;
}());
exports.LicenceUpdater = LicenceUpdater;
