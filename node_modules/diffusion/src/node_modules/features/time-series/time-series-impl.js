"use strict";
/**
 * @module Timeseries
 */
Object.defineProperty(exports, "__esModule", { value: true });
var library_1 = require("core-js/library");
var abstract_datatype_1 = require("data/abstract-datatype");
var datatypes_1 = require("data/datatypes");
var range_query_impl_1 = require("features/time-series/range-query-impl");
var Services = require("services/services");
var require_non_null_1 = require("util/require-non-null");
/**
 * Implementation of the time series feature
 */
var TimeSeriesImpl = /** @class */ (function () {
    /**
     * Create a new TimeSeriesImpl instance
     *
     * @param internal  the internal session
     */
    function TimeSeriesImpl(internal) {
        var locator = internal.getServiceLocator();
        this.defaultRangeQuery = range_query_impl_1.RangeQueryImpl.createDefault(locator.obtain(Services.RANGE_QUERY));
        this.appendService = locator.obtain(Services.TIME_SERIES_APPEND);
        this.editService = locator.obtain(Services.TIME_SERIES_EDIT);
    }
    /**
     * @inheritdoc
     */
    TimeSeriesImpl.prototype.rangeQuery = function () {
        return this.defaultRangeQuery;
    };
    /**
     * @inheritdoc
     */
    TimeSeriesImpl.prototype.edit = function (path, sequence, value, valueType) {
        var _this = this;
        return new library_1.Promise(function (resolve, reject) {
            var datatype;
            try {
                if (valueType instanceof abstract_datatype_1.AbstractDataType) {
                    datatype = valueType;
                }
                else if (valueType) {
                    datatype = datatypes_1.DataTypes.getByClass(valueType);
                }
                else {
                    datatype = datatypes_1.DataTypes.getByValue(value);
                }
                require_non_null_1.requireNonNull(path, 'Path');
                require_non_null_1.requireNonNull(value, 'Value');
                require_non_null_1.requireNonNull(sequence, 'Sequence');
                datatype = require_non_null_1.requireNonNull(datatype, 'Data type');
            }
            catch (e) {
                reject(e);
                return;
            }
            _this.editService.send({
                path: path,
                sequence: sequence,
                dataType: datatype,
                value: datatype.writeValue(value)
            }, function (err, metadata) {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(metadata);
                }
            });
        });
    };
    /**
     * @inheritdoc
     */
    TimeSeriesImpl.prototype.append = function (path, value, valueType) {
        var _this = this;
        return new library_1.Promise(function (resolve, reject) {
            var datatype;
            try {
                if (valueType instanceof abstract_datatype_1.AbstractDataType) {
                    datatype = valueType;
                }
                else if (valueType) {
                    datatype = datatypes_1.DataTypes.getByClass(valueType);
                }
                else {
                    datatype = datatypes_1.DataTypes.getByValue(value);
                }
                require_non_null_1.requireNonNull(path, 'Path');
                require_non_null_1.requireNonNull(value, 'Value');
                datatype = require_non_null_1.requireNonNull(datatype, 'Data type');
            }
            catch (e) {
                reject(e);
                return;
            }
            _this.appendService.send({
                path: path,
                value: datatype.writeValue(value),
                dataType: datatype
            }, function (err, metadata) {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(metadata);
                }
            });
        });
    };
    return TimeSeriesImpl;
}());
exports.TimeSeriesImpl = TimeSeriesImpl;
