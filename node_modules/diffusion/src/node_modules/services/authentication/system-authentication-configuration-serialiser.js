"use strict";
/**
 * @module Services.Authentication
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var system_authentication_1 = require("features/security/system-authentication");
var Codec = require("io/codec");
var BEES = require("serialisers/byte-encoded-enum-serialiser");
var serialiser_1 = require("serialisers/serialiser");
var session_property_validation_serialiser_1 = require("services/authentication/session-property-validation-serialiser");
var system_principal_serialiser_1 = require("./system-principal-serialiser");
/**
 * Serialiser for {@link SystemAuthentication}
 */
var SystemAuthenticationConfigurationSerialiserClass = /** @class */ (function (_super) {
    __extends(SystemAuthenticationConfigurationSerialiserClass, _super);
    function SystemAuthenticationConfigurationSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link SystemAuthentication} from the stream
     *
     * @param bis the input stream
     * @return    the {@link SystemAuthentication} that was read
     */
    SystemAuthenticationConfigurationSerialiserClass.prototype.read = function (bis) {
        var principals = Codec.readCollection(bis, system_principal_serialiser_1.SystemPrincipalSerialiser.read);
        var action = BEES.read(bis, system_authentication_1.CONNECTION_ACTION);
        var roles = Codec.readCollection(bis, Codec.readString);
        var properties = Codec.readDictionary(bis, session_property_validation_serialiser_1.SessionPropertyValidationSerialiser.read);
        return new system_authentication_1.SystemAuthentication(principals, action.value, roles, properties);
    };
    /**
     * Write a {@link SystemAuthentication} to the stream
     *
     * @param bis   the input stream
     * @param value the {@link SystemAuthentication} to be written
     */
    SystemAuthenticationConfigurationSerialiserClass.prototype.write = function (bos, value) {
        Codec.writeCollection(bos, value.principals, system_principal_serialiser_1.SystemPrincipalSerialiser.write);
        var action = system_authentication_1.connectionActionFromString(value.anonymous.action);
        Codec.writeByte(bos, action.id);
        Codec.writeCollection(bos, value.anonymous.roles, Codec.writeString);
        Codec.writeDictionary(bos, value.trustedClientProposedProperties, session_property_validation_serialiser_1.SessionPropertyValidationSerialiser.write);
    };
    return SystemAuthenticationConfigurationSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.SystemAuthenticationConfigurationSerialiserClass = SystemAuthenticationConfigurationSerialiserClass;
/**
 * The {@link SystemAuthenticationConfigurationSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.SystemAuthenticationConfigurationSerialiser = new SystemAuthenticationConfigurationSerialiserClass();
