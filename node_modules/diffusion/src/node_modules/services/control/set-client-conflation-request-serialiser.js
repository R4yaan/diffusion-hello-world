"use strict";
/**
 * @module Services.Control
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var session_id_serialiser_1 = require("session/session-id-serialiser");
/**
 * Serialiser for {@link SetClientConflationRequest}
 */
var SetClientConflationRequestSerialiserClass = /** @class */ (function (_super) {
    __extends(SetClientConflationRequestSerialiserClass, _super);
    function SetClientConflationRequestSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Write a {@link SetClientConflationRequest} to the stream
     *
     * @param bos   the output stream
     * @param value the {@link SetClientConflationRequest} to be written
     */
    SetClientConflationRequestSerialiserClass.prototype.write = function (bos, value) {
        session_id_serialiser_1.SessionIdSerialiser.write(bos, value.sessionID);
        Codec.writeBoolean(bos, value.conflate);
    };
    return SetClientConflationRequestSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.SetClientConflationRequestSerialiserClass = SetClientConflationRequestSerialiserClass;
/**
 * The {@link SetClientConflationRequestSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.SetClientConflationRequestSerialiser = new SetClientConflationRequestSerialiserClass();
