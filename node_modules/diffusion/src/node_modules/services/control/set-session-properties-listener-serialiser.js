"use strict";
/**
 * @module Services.Control
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var conversation_id_serialiser_1 = require("conversation/conversation-id-serialiser");
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
/**
 * Serialiser for {@link SetSessionPropertiesListener}
 */
var SetSessionPropertiesListenerSerialiserClass = /** @class */ (function (_super) {
    __extends(SetSessionPropertiesListenerSerialiserClass, _super);
    function SetSessionPropertiesListenerSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Write a {@link SetSessionPropertiesListener} to the stream
     *
     * @param bos    the output stream
     * @param value  the {@link SetSessionPropertiesListener} to be written
     */
    SetSessionPropertiesListenerSerialiserClass.prototype.write = function (bos, value) {
        if (value.properties) {
            Codec.writeInt32(bos, 0);
            Codec.writeCollection(bos, value.properties, Codec.writeString);
        }
        else {
            Codec.writeInt32(bos, 1);
        }
        conversation_id_serialiser_1.CIDSerialiser.write(bos, value.cid);
    };
    return SetSessionPropertiesListenerSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.SetSessionPropertiesListenerSerialiserClass = SetSessionPropertiesListenerSerialiserClass;
/**
 * The {@link SetSessionPropertiesListenerSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.SetSessionPropertiesListenerSerialiser = new SetSessionPropertiesListenerSerialiserClass();
