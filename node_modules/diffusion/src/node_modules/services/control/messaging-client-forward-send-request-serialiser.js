"use strict";
/**
 * @module Services.Control
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var conversation_id_serialiser_1 = require("conversation/conversation-id-serialiser");
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var session_id_serialiser_1 = require("session/session-id-serialiser");
var messaging_client_forward_send_request_1 = require("./messaging-client-forward-send-request");
/**
 * Serialiser for {@link MessagingClientForwardSendRequest}
 */
var MessagingClientForwardSendRequestSerialiserClass = /** @class */ (function (_super) {
    __extends(MessagingClientForwardSendRequestSerialiserClass, _super);
    function MessagingClientForwardSendRequestSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link MessagingClientForwardSendRequest} from the stream
     *
     * @param bis the input stream
     * @return    the {@link MessagingClientForwardSendRequest} that was read
     */
    MessagingClientForwardSendRequestSerialiserClass.prototype.read = function (bis) {
        var cid = conversation_id_serialiser_1.CIDSerialiser.read(bis);
        var sessionID = session_id_serialiser_1.SessionIdSerialiser.read(bis);
        var path = Codec.readString(bis);
        var sessionProperties = Codec.readDictionary(bis, Codec.readString);
        var dataType = Codec.readString(bis);
        var content = Codec.readBytes(bis);
        return new messaging_client_forward_send_request_1.MessagingClientForwardSendRequest(cid, sessionID, path, sessionProperties, dataType, content);
    };
    return MessagingClientForwardSendRequestSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.MessagingClientForwardSendRequestSerialiserClass = MessagingClientForwardSendRequestSerialiserClass;
/**
 * The {@link MessagingClientForwardSendRequest} singleton
 */ // tslint:disable-next-line:variable-name
exports.MessagingClientForwardSendRequestSerialiser = new MessagingClientForwardSendRequestSerialiserClass();
