"use strict";
/**
 * @module Services.Control
 */
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Server result of from a SET_SESSION_PROPERTIES request.
 */
var SetSessionPropertiesResult = /** @class */ (function () {
    /**
     * Create a new SetSessionPropertiesResult instance
     *
     * @param changedProperties  the properties that have changed
     * @param newProperties      the properties that have been added
     */
    function SetSessionPropertiesResult(changedProperties, newProperties) {
        var e_1, _a, e_2, _b;
        this.properties = {};
        try {
            for (var _c = __values(Object.getOwnPropertyNames(changedProperties)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var k = _d.value;
                this.properties[k] = changedProperties[k];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var newProperties_1 = __values(newProperties), newProperties_1_1 = newProperties_1.next(); !newProperties_1_1.done; newProperties_1_1 = newProperties_1.next()) {
                var p = newProperties_1_1.value;
                this.properties[p] = null;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (newProperties_1_1 && !newProperties_1_1.done && (_b = newProperties_1.return)) _b.call(newProperties_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    }
    return SetSessionPropertiesResult;
}());
exports.SetSessionPropertiesResult = SetSessionPropertiesResult;
