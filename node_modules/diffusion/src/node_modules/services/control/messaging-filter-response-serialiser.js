"use strict";
/**
 * @module Services.Control
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var conversation_id_serialiser_1 = require("conversation/conversation-id-serialiser");
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var messaging_filter_response_1 = require("services/control/messaging-filter-response");
var messaging_response_serialiser_1 = require("services/control/messaging-response-serialiser");
var error_reason_serialiser_1 = require("services/error-reason-serialiser");
var session_id_serialiser_1 = require("session/session-id-serialiser");
/**
 * Serialiser for {@link MessagingFilterResponse}
 */
var MessagingFilterResponseSerialiserClass = /** @class */ (function (_super) {
    __extends(MessagingFilterResponseSerialiserClass, _super);
    function MessagingFilterResponseSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link MessagingFilterResponse} from the stream
     *
     * @param bis  the input stream
     * @return     the {@link MessagingFilterResponse} that was read
     */
    MessagingFilterResponseSerialiserClass.prototype.read = function (bis) {
        var cid = conversation_id_serialiser_1.CIDSerialiser.read(bis);
        var sessionID = session_id_serialiser_1.SessionIdSerialiser.read(bis);
        switch (Codec.readByte(bis)) {
            case 0:
                var response = messaging_response_serialiser_1.MessagingResponseSerialiser.read(bis);
                return new messaging_filter_response_1.MessagingFilterResponse(cid, sessionID, response);
            default:
                var errorReason = error_reason_serialiser_1.ErrorReasonSerialiser.read(bis);
                return new messaging_filter_response_1.MessagingFilterResponse(cid, sessionID, null, errorReason);
        }
    };
    return MessagingFilterResponseSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.MessagingFilterResponseSerialiserClass = MessagingFilterResponseSerialiserClass;
/**
 * The {@link MessagingFilterResponseSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.MessagingFilterResponseSerialiser = new MessagingFilterResponseSerialiserClass();
