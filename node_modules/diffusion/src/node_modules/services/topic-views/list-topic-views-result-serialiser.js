"use strict";
/**
 * @module Services.TopicUpdate
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var list_topic_views_result_1 = require("./list-topic-views-result");
var read_topic_view_1 = require("./read-topic-view");
/**
 * Serialiser for {@link ListTopicViewsResult}
 */
var ListTopicViewsResultSerialiserClass = /** @class */ (function (_super) {
    __extends(ListTopicViewsResultSerialiserClass, _super);
    function ListTopicViewsResultSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link ListTopicViewsResult} from the stream
     *
     * @param bis  the input stream
     * @return     the {@link ListTopicViewsResult} that was read
     */
    ListTopicViewsResultSerialiserClass.prototype.read = function (bis) {
        var result = Codec.readCollection(bis, read_topic_view_1.readTopicView);
        return new list_topic_views_result_1.ListTopicViewsResult(result);
    };
    return ListTopicViewsResultSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.ListTopicViewsResultSerialiserClass = ListTopicViewsResultSerialiserClass;
/**
 * The {@link ListTopicViewsResultSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.ListTopicViewsResultSerialiser = new ListTopicViewsResultSerialiserClass();
