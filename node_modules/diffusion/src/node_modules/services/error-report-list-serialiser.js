"use strict";
/**
 * @module Services.Authentication
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var error_report_list_1 = require("services/error-report-list");
var error_report_serialiser_1 = require("services/error-report-serialiser");
/**
 * Serialiser for {@link ErrorReportList}
 */
var ErrorReportListSerialiserClass = /** @class */ (function (_super) {
    __extends(ErrorReportListSerialiserClass, _super);
    function ErrorReportListSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link ErrorReportList} from the stream
     *
     * @param bis the input stream
     * @return    the {@link ErrorReportList} that was read
     */
    ErrorReportListSerialiserClass.prototype.read = function (input) {
        var errors = Codec.readCollection(input, error_report_serialiser_1.ErrorReportSerialiser.read);
        return new error_report_list_1.ErrorReportList(errors);
    };
    /**
     * Write a {@link ErrorReportList} to the stream
     *
     * @param bis   the input stream
     * @param value the {@link ErrorReportList} to be written
     */
    ErrorReportListSerialiserClass.prototype.write = function (output, value) {
        Codec.writeCollection(output, value.errors, error_report_serialiser_1.ErrorReportSerialiser.write);
    };
    return ErrorReportListSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.ErrorReportListSerialiserClass = ErrorReportListSerialiserClass;
/**
 * The {@link ErrorReportListSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.ErrorReportListSerialiser = new ErrorReportListSerialiserClass();
