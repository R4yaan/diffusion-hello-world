"use strict";
/**
 * @module Services.MetricCollectors
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var abstract_metric_collector_1 = require("./abstract-metric-collector");
/**
 * A topic metric collector.
 */
var TopicMetricCollector = /** @class */ (function (_super) {
    __extends(TopicMetricCollector, _super);
    /**
     * Create a new TopicMetricCollector instance
     *
     * @param name                       identity
     * @param exportToPrometheus         whether to expose the collector through the Prometheus gateway
     * @param topicSelector              identifies the target topics
     * @param groupByTopicType           whether to group the results by topic type
     */
    function TopicMetricCollector(name, exportToPrometheus, topicSelector, groupByTopicType) {
        var _this = _super.call(this, name, exportToPrometheus) || this;
        _this.topicSelector = topicSelector;
        _this.groupByTopicType = groupByTopicType;
        return _this;
    }
    return TopicMetricCollector;
}(abstract_metric_collector_1.AbstractMetricCollector));
exports.TopicMetricCollector = TopicMetricCollector;
