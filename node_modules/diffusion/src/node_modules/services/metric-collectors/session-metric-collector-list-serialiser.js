"use strict";
/**
 * @module Services.MetricCollectors
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var session_metric_collector_list_1 = require("./session-metric-collector-list");
var session_metric_collector_serialiser_1 = require("./session-metric-collector-serialiser");
/**
 * Serialiser for {@link SessionMetricCollectorList}
 */
var SessionMetricCollectorListSerialiserClass = /** @class */ (function (_super) {
    __extends(SessionMetricCollectorListSerialiserClass, _super);
    function SessionMetricCollectorListSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link SessionMetricCollector} from the stream
     *
     * @param bis  the input stream
     * @return     the {@link SessionMetricCollectorList} that was read
     */
    SessionMetricCollectorListSerialiserClass.prototype.read = function (bis) {
        var collectors = Codec.readCollection(bis, session_metric_collector_serialiser_1.SessionMetricCollectorSerialiser.read);
        return new session_metric_collector_list_1.SessionMetricCollectorList(collectors);
    };
    /**
     * Write a {@link SessionMetricCollector} to the stream
     *
     * @param bos    the output stream
     * @param value  the {@link SessionMetricCollectorList} to be written
     */
    SessionMetricCollectorListSerialiserClass.prototype.write = function (bos, value) {
        Codec.writeCollection(bos, value.collectors, session_metric_collector_serialiser_1.SessionMetricCollectorSerialiser.write);
    };
    return SessionMetricCollectorListSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.SessionMetricCollectorListSerialiserClass = SessionMetricCollectorListSerialiserClass;
/**
 * The singleton
 */ // tslint:disable-next-line:variable-name
exports.SessionMetricCollectorListSerialiser = new SessionMetricCollectorListSerialiserClass();
