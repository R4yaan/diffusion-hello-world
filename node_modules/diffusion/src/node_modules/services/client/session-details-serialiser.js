"use strict";
/**
 * @module Services.Client
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var session_details_1 = require("../../../client/session-details");
var ClientLocationSerialiser = require("./client-location-serialiser");
var ClientSummarySerialiser = require("./client-summary-serialiser");
/**
 * Read a boolean flag from the stream
 *
 * @param bis  the input stream
 * @return     the boolean that was read
 */
function nextOption(bis) {
    var r = Codec.readByte(bis);
    switch (r) {
        case 0:
            return false;
        case 1:
            return true;
        default:
            throw new Error('Invalid option byte: ' + r);
    }
}
/**
 * Read a {@link ClientSummary} from the stream
 *
 * @param bis  the input stream
 * @return     the {@link ClientSummary} that was read
 */
function read(bis) {
    var details = {
        available: []
    };
    if (!nextOption(bis)) {
        return details;
    }
    if (nextOption(bis)) {
        details.available.push(session_details_1.DetailType.SUMMARY);
        details.summary = ClientSummarySerialiser.read(bis);
    }
    if (nextOption(bis)) {
        details.available.push(session_details_1.DetailType.LOCATION);
        details.location = ClientLocationSerialiser.read(bis);
    }
    if (nextOption(bis)) {
        details.available.push(session_details_1.DetailType.CONNECTOR_NAME);
        details.connector = Codec.readString(bis);
    }
    if (nextOption(bis)) {
        details.available.push(session_details_1.DetailType.SERVER_NAME);
        details.server = Codec.readString(bis);
    }
    return details;
}
exports.read = read;
