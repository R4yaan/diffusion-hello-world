"use strict";
/**
 * @module Services.TopicUpdate
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var UpdateConstraintSerialiser = require("./update-constraint-serialiser");
/**
 * Serialiser for {@link ApplyJsonPatchRequest}
 */
var ApplyJsonPatchRequestSerialiserClass = /** @class */ (function (_super) {
    __extends(ApplyJsonPatchRequestSerialiserClass, _super);
    function ApplyJsonPatchRequestSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Write a {@link ApplyJsonPatchRequest} to the stream
     *
     * @param bos    the output stream
     * @param value  the {@link ApplyJsonPatchRequest} to be written
     */
    ApplyJsonPatchRequestSerialiserClass.prototype.write = function (bos, value) {
        Codec.writeString(bos, value.path);
        Codec.writeString(bos, value.patch);
        UpdateConstraintSerialiser.write(bos, value.constraint);
    };
    return ApplyJsonPatchRequestSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.ApplyJsonPatchRequestSerialiserClass = ApplyJsonPatchRequestSerialiserClass;
/**
 * The {@link ApplyJsonPatchRequestSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.ApplyJsonPatchRequestSerialiser = new ApplyJsonPatchRequestSerialiserClass();
