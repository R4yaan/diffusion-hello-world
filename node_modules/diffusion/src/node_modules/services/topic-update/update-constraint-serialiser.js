"use strict";
/**
 * @module Services.TopicUpdate
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var update_constraint_1 = require("topic-update/update-constraint");
var BinaryValueSerialiser = require("./binary-value-serialiser");
var ConjunctionSerialiser = require("./conjunction-serialiser");
var LockedSerialiser = require("./locked-serialiser");
var NoTopicSerialiser = require("./no-topic-serialiser");
var NoValueSerialiser = require("./no-value-serialiser");
var PartialJSONSerialiser = require("./partial-json-serialiser");
var UnconstrainedSerialiser = require("./unconstrained-serialiser");
/**
 * The serialisers for each constraint type
 */
var constraintSerialisers = {
    UNCONSTRAINED: UnconstrainedSerialiser,
    CONJUNCTION: ConjunctionSerialiser,
    BINARY_VALUE: BinaryValueSerialiser,
    NO_VALUE: NoValueSerialiser,
    LOCKED: LockedSerialiser,
    NO_TOPIC: NoTopicSerialiser,
    PARTIAL_JSON: PartialJSONSerialiser
};
/**
 * Write an {@link UpdateConstraint} update constraint to the stream
 */
function write(bos, value) {
    // tslint:disable-next-line:strict-type-predicates
    if (value.getConstraintType === undefined
        // tslint:disable-next-line:strict-type-predicates
        || update_constraint_1.ConstraintType[value.getConstraintType()] === undefined) {
        throw new Error('Unknown constraint type');
    }
    Codec.writeByte(bos, update_constraint_1.ConstraintType[value.getConstraintType()]);
    constraintSerialisers[value.getConstraintType()].write(bos, value, write);
}
exports.write = write;
