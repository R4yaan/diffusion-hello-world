"use strict";
/**
 * @module Services.Security
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var BEES = require("serialisers/byte-encoded-enum-serialiser");
var serialiser_1 = require("serialisers/serialiser");
var authentication_response_1 = require("./authentication-response");
/**
 * Serialiser for {@link AuthenticationResponse}
 */
var AuthenticationResponseSerialiserClass = /** @class */ (function (_super) {
    __extends(AuthenticationResponseSerialiserClass, _super);
    function AuthenticationResponseSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link AuthenticationResponse} from the stream
     *
     * @param bis  the input stream
     * @return     the {@link AuthenticationResponse} that was read
     */
    AuthenticationResponseSerialiserClass.prototype.read = function (bis) {
        var type = BEES.read(bis, authentication_response_1.TypeCode);
        switch (type) {
            case authentication_response_1.TypeCode.ABSTAIN:
                return authentication_response_1.ABSTAIN;
            case authentication_response_1.TypeCode.ALLOW:
                return authentication_response_1.ALLOW;
            case authentication_response_1.TypeCode.ALLOW_WITH_RESULT:
                return authentication_response_1.allow({
                    roles: Codec.readCollection(bis, Codec.readString),
                    properties: Codec.readDictionary(bis, Codec.readString)
                });
            default:
                return authentication_response_1.DENY;
        }
    };
    /**
     * Write a {@link AuthenticationResponse} to the stream
     *
     * @param bos    the output stream
     * @param value  the {@link AuthenticationResponse} to be written
     */
    AuthenticationResponseSerialiserClass.prototype.write = function (bos, value) {
        BEES.write(bos, value.type);
        if (value.type === authentication_response_1.TypeCode.ALLOW_WITH_RESULT) {
            // tslint:disable-next-line:deprecation
            var result = value.result;
            Codec.writeCollection(bos, result.roles, Codec.writeString);
            Codec.writeDictionary(bos, result.properties, Codec.writeString);
        }
    };
    return AuthenticationResponseSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.AuthenticationResponseSerialiserClass = AuthenticationResponseSerialiserClass;
/**
 * The {@link AuthenticationResponseSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.AuthenticationResponseSerialiser = new AuthenticationResponseSerialiserClass();
