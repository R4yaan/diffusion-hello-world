"use strict";
/**
 * @module Services.Security
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var security_configuration_1 = require("features/security/security-configuration");
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var RoleSerialiser = require("services/security/role-serialiser");
/**
 * Serialiser for {@link SecurityConfigurationImpl}
 */
var SecurityConfigurationSerialiserClass = /** @class */ (function (_super) {
    __extends(SecurityConfigurationSerialiserClass, _super);
    function SecurityConfigurationSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link SecurityConfigurationImpl} from the stream
     *
     * @param bis the input stream
     * @return    the {@link SecurityConfigurationImpl} that was read
     */
    SecurityConfigurationSerialiserClass.prototype.read = function (bis) {
        var anonymous = Codec.readCollection(bis, Codec.readString);
        var named = Codec.readCollection(bis, Codec.readString);
        var roles = Codec.readCollection(bis, RoleSerialiser.read);
        var isolatedPaths = Codec.readCollection(bis, Codec.readString);
        return new security_configuration_1.SecurityConfigurationImpl(anonymous, named, roles, isolatedPaths);
    };
    return SecurityConfigurationSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.SecurityConfigurationSerialiserClass = SecurityConfigurationSerialiserClass;
/**
 * The {@link SecurityConfigurationSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.SecurityConfigurationSerialiser = new SecurityConfigurationSerialiserClass();
