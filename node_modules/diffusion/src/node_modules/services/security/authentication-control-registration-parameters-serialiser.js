"use strict";
/**
 * @module Services.Security
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var BEES = require("serialisers/byte-encoded-enum-serialiser");
var serialiser_1 = require("serialisers/serialiser");
var control_registration_params_serialiser_1 = require("services/control/control-registration-params-serialiser");
var session_details_1 = require("../../../client/session-details");
var authentication_control_registration_parameters_1 = require("./authentication-control-registration-parameters");
/**
 * Serialiser for {@link AuthenticationControlRegistrationParameters}
 */
var AuthenticationControlRegistrationParametersSerialiserClass = /** @class */ (function (_super) {
    __extends(AuthenticationControlRegistrationParametersSerialiserClass, _super);
    function AuthenticationControlRegistrationParametersSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link AuthenticationControlRegistrationParameters} from the stream
     *
     * @param bis  the input stream
     * @return     the {@link AuthenticationControlRegistrationParameters} that was read
     */
    AuthenticationControlRegistrationParametersSerialiserClass.prototype.read = function (bis) {
        var params = control_registration_params_serialiser_1.ControlRegistrationParamsSerialiser.read(bis);
        var name = Codec.readString(bis);
        var details = Codec.readCollection(bis, function () { return (BEES.read(bis, session_details_1.DetailType)); });
        return new authentication_control_registration_parameters_1.AuthenticationControlRegistrationParameters(params, name, details);
    };
    /**
     * Write a {@link AuthenticationControlRegistrationParameters} to the stream
     *
     * @param bos    the output stream
     * @param value  the {@link AuthenticationControlRegistrationParameters} to be written
     */
    AuthenticationControlRegistrationParametersSerialiserClass.prototype.write = function (bos, value) {
        var e_1, _a;
        control_registration_params_serialiser_1.ControlRegistrationParamsSerialiser.write(bos, value);
        Codec.writeString(bos, value.name);
        Codec.writeByte(bos, value.details.length);
        try {
            for (var _b = __values(value.details), _c = _b.next(); !_c.done; _c = _b.next()) {
                var detail = _c.value;
                Codec.writeByte(bos, detail);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    return AuthenticationControlRegistrationParametersSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.AuthenticationControlRegistrationParametersSerialiserClass = AuthenticationControlRegistrationParametersSerialiserClass;
/**
 * The {@link AuthenticationControlRegistrationParametersSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.AuthenticationControlRegistrationParametersSerialiser = new AuthenticationControlRegistrationParametersSerialiserClass();
