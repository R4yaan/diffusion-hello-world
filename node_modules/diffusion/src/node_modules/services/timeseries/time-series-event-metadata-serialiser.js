"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Codec = require("io/codec");
var serialiser_1 = require("serialisers/serialiser");
var time_series_event_metadata_1 = require("services/timeseries/time-series-event-metadata");
/**
 * Serialiser for {@link EventMetadataImpl}
 */
var EventMetadataImplSerialiserClass = /** @class */ (function (_super) {
    __extends(EventMetadataImplSerialiserClass, _super);
    function EventMetadataImplSerialiserClass() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Read a {@link EventMetadataImpl} from the stream
     *
     * @param input the input stream
     * @return      the {@link EventMetadataImpl} that was read
     */
    EventMetadataImplSerialiserClass.prototype.read = function (input) {
        var sequence = Codec.readInt64(input);
        var timestamp = Codec.readInt64(input);
        var author = Codec.readString(input);
        return new time_series_event_metadata_1.EventMetadataImpl(sequence.toNumber(), timestamp.toNumber(), author);
    };
    /**
     * Write a {@link EventMetadataImpl} to the stream
     *
     * @param output  the input stream
     * @param value   the {@link EventMetadataImpl} to be written
     */
    EventMetadataImplSerialiserClass.prototype.write = function (output, metadata) {
        Codec.writeInt64(output, metadata.sequence);
        Codec.writeInt64(output, metadata.timestamp);
        Codec.writeString(output, metadata.author);
    };
    return EventMetadataImplSerialiserClass;
}(serialiser_1.AbstractSerialiser));
exports.EventMetadataImplSerialiserClass = EventMetadataImplSerialiserClass;
/**
 * The {@link EventMetadataImplSerialiser} singleton
 */ // tslint:disable-next-line:variable-name
exports.EventMetadataImplSerialiser = new EventMetadataImplSerialiserClass();
