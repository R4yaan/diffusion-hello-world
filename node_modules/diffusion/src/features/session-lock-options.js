"use strict";
/**
 * @module diffusion.locks
 *
 * Provide access to {@link SessionLockScope}
 *
 * **Example:**
 * ```
 * // Get a reference to the security feature
 * var locks = diffusion.locks;
 * ```
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Enum containing <code>scope</code> parameter of {@link Session.lock}
 *
 * **Example:**
 * ```
 * // Get the ALL_FIXED_PROPERTIES key
 * var scope = diffusion.locks.SessionLockScope.UNLOCK_ON_SESSION_LOSS;
 * ```
 *
 * @since 6.2
 */
var SessionLockScope;
(function (SessionLockScope) {
    /**
     * The lock will be released when the acquiring session is closed.
     */
    SessionLockScope[SessionLockScope["UNLOCK_ON_SESSION_LOSS"] = 0] = "UNLOCK_ON_SESSION_LOSS";
    /**
     * The lock will be released when the acquiring session loses its
     * current connection to the server.
     */
    SessionLockScope[SessionLockScope["UNLOCK_ON_CONNECTION_LOSS"] = 1] = "UNLOCK_ON_CONNECTION_LOSS";
})(SessionLockScope = exports.SessionLockScope || (exports.SessionLockScope = {}));
// tslint:disable-next-line:variable-name
exports.SessionLockOptions = {
    SessionLockScope: SessionLockScope
};
